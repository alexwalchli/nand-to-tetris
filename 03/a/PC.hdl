// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // memory
    Register(in=in,load=load,out=memory);

    // reset
    Mux(a=in, b=False, sel=reset, out=maybeReset);

    // increment
    Inc16(in=in,out=incremented);

    // reset or increment
    Mux(a=maybeReset, b=incremented, sel=inc, out=maybeResetOrIncrement);

    // final else
    Nand(a=reset,b=load,out=notResetAndLoad);
    Nand(a=notResetAndLoad,b=inc, out=notResetAndLoadAndIncrement);

    // choose between the resetOrIncrement or from memory
    Mux(a=maybeResetOrIncrement, b=memory, sel=notResetAndLoadAndIncrement,out=out);
}
